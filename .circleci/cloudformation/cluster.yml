Parameters:
  EnvName:
    Description: Environment name
    Default: get-list-backend-service
    Type: String

Resources:
  ClusterInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${EnvName}-cluster-profile
      Path: "/"
      Roles:
        - !Ref EKSClusterRole

  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvName}-cluster-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess

  BackendServiceCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Version: "1.22"
      Name: !Sub ${EnvName}-cluster
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${EnvName}-SCG
        SubnetIds:
          Fn::Split:
            - ","
            - Fn::ImportValue:
                Fn::Sub: ${EnvName}-PUB-NETS
Outputs:
  EksId:
    Description: EKS id
    Value: !Ref BackendServiceCluster
    Export:
      Name: !Sub ${EnvName}-EKSCluster

  EKSRoleArn:
    Description: Role for accessing and creating aws resources
    Value: !GetAtt EKSClusterRole.Arn
    Export:
      Name: !Sub ${EnvName}-EKSRole